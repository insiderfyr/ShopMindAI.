apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
  namespace: shopmindai
data:
  server.properties: |
    # Kafka configuration for billions of events
    broker.id.generation.enable=true
    
    # Network
    listeners=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
    advertised.listeners=PLAINTEXT://kafka-{POD_ID}.kafka-headless:9092
    listener.security.protocol.map=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
    inter.broker.listener.name=PLAINTEXT
    
    # Logs
    log.dirs=/var/lib/kafka/data
    log.retention.hours=168
    log.segment.bytes=1073741824
    log.retention.check.interval.ms=300000
    
    # Replication
    default.replication.factor=3
    min.insync.replicas=2
    
    # Performance
    num.network.threads=16
    num.io.threads=16
    socket.send.buffer.bytes=102400
    socket.receive.buffer.bytes=102400
    socket.request.max.bytes=104857600
    
    # Compression
    compression.type=lz4
    
    # Group Coordinator
    offsets.topic.replication.factor=3
    transaction.state.log.replication.factor=3
    transaction.state.log.min.isr=2
    
    # Quotas
    quota.consumer.default=1000000
    quota.producer.default=1000000
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: shopmindai
spec:
  serviceName: kafka-headless
  replicas: 5  # Start with 5 brokers
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - kafka
            topologyKey: kubernetes.io/hostname
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:7.5.0
        ports:
        - containerPort: 9092
          name: plaintext
        - containerPort: 9093
          name: controller
        env:
        - name: KAFKA_HEAP_OPTS
          value: "-Xms8g -Xmx8g"
        - name: KAFKA_KRAFT_MODE
          value: "true"
        - name: KAFKA_BROKER_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KAFKA_PROCESS_ROLES
          value: "broker,controller"
        - name: KAFKA_CONTROLLER_QUORUM_VOTERS
          value: "0@kafka-0.kafka-headless:9093,1@kafka-1.kafka-headless:9093,2@kafka-2.kafka-headless:9093"
        - name: KAFKA_LISTENERS
          value: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "PLAINTEXT"
        - name: KAFKA_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"
        - name: KAFKA_LOG_DIRS
          value: "/var/lib/kafka/data"
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_NUM_PARTITIONS
          value: "50"  # High partition count for parallelism
        - name: KAFKA_DEFAULT_REPLICATION_FACTOR
          value: "3"
        - name: KAFKA_MIN_INSYNC_REPLICAS
          value: "2"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "3"
        resources:
          requests:
            cpu: 2
            memory: 16Gi
          limits:
            cpu: 8
            memory: 32Gi
        volumeMounts:
        - name: data
          mountPath: /var/lib/kafka/data
        - name: config
          mountPath: /etc/kafka
        livenessProbe:
          exec:
            command:
            - kafka-broker-api-versions
            - --bootstrap-server=localhost:9092
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: config
        configMap:
          name: kafka-config
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: fast-ssd
      resources:
        requests:
          storage: 500Gi
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-headless
  namespace: shopmindai
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 9092
    targetPort: 9092
    name: plaintext
  - port: 9093
    targetPort: 9093
    name: controller
  selector:
    app: kafka
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-lb
  namespace: shopmindai
spec:
  type: LoadBalancer
  ports:
  - port: 9092
    targetPort: 9092
  selector:
    app: kafka
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-topics-init
  namespace: shopmindai
spec:
  template:
    spec:
      containers:
      - name: kafka-init
        image: confluentinc/cp-kafka:7.5.0
        command:
        - /bin/bash
        - -c
        - |
          sleep 60
          
          # Create topics with high partition count for scale
          kafka-topics --bootstrap-server kafka-headless:9092 \
            --create --if-not-exists \
            --topic chat-events \
            --partitions 100 \
            --replication-factor 3 \
            --config retention.ms=604800000 \
            --config compression.type=lz4
          
          kafka-topics --bootstrap-server kafka-headless:9092 \
            --create --if-not-exists \
            --topic user-events \
            --partitions 50 \
            --replication-factor 3 \
            --config retention.ms=2592000000
          
          kafka-topics --bootstrap-server kafka-headless:9092 \
            --create --if-not-exists \
            --topic audit-logs \
            --partitions 30 \
            --replication-factor 3 \
            --config retention.ms=7776000000 \
            --config min.insync.replicas=2
          
          kafka-topics --bootstrap-server kafka-headless:9092 \
            --create --if-not-exists \
            --topic analytics-events \
            --partitions 100 \
            --replication-factor 2 \
            --config retention.ms=86400000
      restartPolicy: OnFailure