apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-service
  namespace: shopmindai
  labels:
    app: chat-service
    version: v1
spec:
  replicas: 3  # Start with 3, scale to thousands
  selector:
    matchLabels:
      app: chat-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0  # Zero downtime
  template:
    metadata:
      labels:
        app: chat-service
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9001"
        prometheus.io/path: "/metrics"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - chat-service
              topologyKey: kubernetes.io/hostname
      containers:
      - name: chat-service
        image: shopmindai/chat-service:latest
        imagePullPolicy: Always
        ports:
        - name: grpc
          containerPort: 9000
          protocol: TCP
        - name: http
          containerPort: 8001
          protocol: TCP
        - name: metrics
          containerPort: 9001
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: host
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: url
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              name: kafka-config
              key: brokers
        - name: GOMAXPROCS
          value: "2"
        - name: GOMEMLIMIT
          value: "1750MiB"
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 2000m
            memory: 2Gi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: chat-service
  namespace: shopmindai
  labels:
    app: chat-service
spec:
  type: ClusterIP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
  - name: grpc
    port: 9000
    targetPort: grpc
  - name: http
    port: 8001
    targetPort: http
  - name: metrics
    port: 9001
    targetPort: metrics
  selector:
    app: chat-service
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: chat-service-hpa
  namespace: shopmindai
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: chat-service
  minReplicas: 3
  maxReplicas: 1000  # Scale to 1000 pods
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 70
  - type: Pods
    pods:
      metric:
        name: grpc_requests_per_second
      target:
        type: AverageValue
        averageValue: "1000"
  - type: External
    external:
      metric:
        name: kafka_consumer_lag
        selector:
          matchLabels:
            topic: "chat-events"
      target:
        type: Value
        value: "10000"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 5
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 20
        periodSeconds: 30
      selectPolicy: Max
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: chat-service-pdb
  namespace: shopmindai
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: chat-service
---
apiVersion: autoscaling/v1
kind: VerticalPodAutoscaler
metadata:
  name: chat-service-vpa
  namespace: shopmindai
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: chat-service
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: chat-service
      minAllowed:
        cpu: 50m
        memory: 128Mi
      maxAllowed:
        cpu: 4
        memory: 8Gi